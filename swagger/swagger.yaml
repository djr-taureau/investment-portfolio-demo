swagger: "2.0"
info:
  description: "These are the Swagger definitions for SoftBank API"
  version: "1.0.0"
  title: "SoftBank API"
  contact:
    email: "apiteam@swagger.io"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "someapi.somewhere.com"
basePath: "/v1"
tags:
  - name: "company"
    description: "APIs for accessing Company related Entities"
schemes:
  - "https"
  - "http"
paths:
  /companies:
    get:
      tags:
        - "company"
      summary: "Returns a list of company domain objects."
      description: "Returns a list of company domain objects."
      operationId: "getAllCompanies"
      produces:
        - "application/json"
      parameters:
        - name: "groupBy"
          in: "query"
          description: "Optional group by param that directs the API to return results in a grouped fashion - NONE would return one group with all companies"
          required: false
          type: "string"
          default: "NONE"
          enum:
            - "NONE"
            - "SECTOR"
            - "TYPE"
            - "STAGE"
            - "MOIC"
            - "IRR"
            - "INVESTED"
            - "VALUATION"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/CompanyListResponse"
        400:
          description: "Invalid request"
  /companies/{companyId}:
    get:
      tags:
        - "company"
      summary: "Returns a single company domain object by requested ID."
      description: "Returns a single company domain object by requested ID"
      operationId: "getCompanyById"
      produces:
        - "application/json"
      parameters:
        - name: "companyId"
          in: "path"
          description: "ID of the requested Company"
          required: true
          type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Company"
        400:
          description: "Invalid request"
  /companies/{companyId}/revenue:
    get:
      tags:
        - "revenue data"
      summary: "Gets revenue data for specific companyId"
      description: "Returns the standard metrics response"
      operationId: "getRevenueByCompanyId"
      produces:
        - "application/json"
      parameters:
          - name: "companyId"
            in: "path"
            description: "ID of the Company for which to return revenue"
            required: true
            type: "integer"
            format: "int64"
          - name: "as_of_date"
            in: "query"
            description: "As-Of Date for which to return data, in the format YYYY-MM-dd"
            required: true
            type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/MetricsResponse"
        400:
          description: "Invalid ID supplied"
  /companies/{companyId}/ebitda:
    get:
      tags:
        - "ebitda data"
      summary: "Gets ebitda data for specific companyId"
      description: "Returns the standard metrics response"
      operationId: "getEbitdaByCompanyId"
      produces:
        - "application/json"
      parameters:
        - name: "companyId"
          in: "path"
          description: "ID of the Company for which to return ebitda"
          required: true
          type: "integer"
          format: "int64"
        - name: "as_of_date"
          in: "query"
          description: "As-Of Date for which to return data, in the format YYYY-MM-dd"
          required: true
          type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/MetricsResponse"
        400:
          description: "Invalid ID supplied"
  /companies/{companyId}/valuation:
    get:
      tags:
        - "valuation data"
      summary: "Gets valuation data for specific companyId"
      description: "Returns a Valuation object"
      operationId: "getValuationByCompanyId"
      produces:
        - "application/json"
      parameters:
        - name: "companyId"
          in: "path"
          description: "ID of the Company for which to return valuation"
          required: true
          type: "integer"
          format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Valuation"
        400:
          description: "Invalid ID supplied"
  /companies/{companyId}/cash:
    get:
      tags:
        - "cash data"
      summary: "Gets cash data for specific companyId"
      description: "Returns an CashResponse"
      operationId: "getCashByCompanyId"
      produces:
        - "application/json"
      parameters:
        - name: "companyId"
          in: "path"
          description: "ID of the Company for which to return cash details"
          required: true
          type: "integer"
          format: "int64"
        - name: "as_of_date"
          in: "query"
          description: "As-Of Date for which to return data, in the format YYYY-MM-dd"
          required: true
          type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/CashData"
        400:
          description: "Invalid ID supplied"
  /companies/{companyId}/kpis:
    get:
      tags:
        - "KPI data"
      summary: "Gets up to 4 KPIs data for specific companyId"
      description: "Returns the standard MetricsResponse"
      operationId: "getKpisByCompanyId"
      produces:
        - "application/json"
      parameters:
        - name: "companyId"
          in: "path"
          description: "ID of the Company for which to return kpis"
          required: true
          type: "integer"
          format: "int64"
        - name: "as_of_date"
          in: "query"
          description: "As-Of Date for which to return data, in the format YYYY-MM-dd"
          required: true
          type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/KpisResponse"
        400:
          description: "Invalid ID supplied"
  /companies/{companyId}/team-members:
    get:
      tags:
        - "team"
      summary: "Retrieve list of teams/members for this company"
      description: ""
      operationId: "getTeamMembersForCompany"
      produces:
        - "application/json"
      parameters:
        - name: "companyId"
          in: "path"
          description: "Id for the portfolio company being requested"
          required: true
          type: "number"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Team"
        400:
          description: "Invalid status value"
  /companies/{companyId}/documents:
    get:
      tags:
        - "team"
      summary: "Retrieve list of documents for this company"
      description: ""
      operationId: "getDocumentsForCompany"
      produces:
        - "application/json"
      parameters:
        - name: "companyId"
          in: "path"
          description: "Id for the company documents being requested"
          required: true
          type: "number"
        - name: "from"
          in: "query"
          description: "Starting date for range (default 'all time') in format YYYY-MM-dd"
          required: false
          type: "string"
        - name: "to"
          in: "query"
          description: "Ending date for range (default 'all time') in format YYYY-MM-dd"
          required: false
          type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/DocumentsListResponse"
        400:
          description: "Invalid company id"
  /companies/{companyId}/team-members/{teamMemberId}:
    get:
      tags:
        - "team"
      summary: "Retrieve specific for a selected team member"
      description: ""
      operationId: "getTeamMemberForCompany"
      produces:
        - "application/json"
      parameters:
        - name: "companyId"
          in: "path"
          description: "Id for the portfolio company being requested"
          required: true
          type: "number"
        - name: "teamMemberId"
          in: "path"
          description: "Id for the team member summary being requested"
          required: true
          type: "number"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/TeamMember"
        400:
          description: "Invalid id"
  /portfolio/{id}:
    get:
      tags:
        - "portfolio"
      summary: "Retrieve summary information about the portfolio"
      description: ""
      operationId: "getPortfolioSummary"
      parameters:
        - name: "id"
          in: "path"
          description: "Id for the portfolio summary being requested"
          required: true
          type: "number"
      produces:
        - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/PortfolioSummary"
        400:
          description: "Invalid status value"
  /portfolio/{id}/sectors:
    get:
      tags:
        - "portfolio"
      summary: "Retrieve a list of sectors used for the portfolio"
      description: ""
      operationId: "getPortfolioSectors"
      parameters:
        - name: "id"
          in: "path"
          description: "Id for the portfolio sectors being requested"
          required: true
          type: "number"
      produces:
        - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/KeyValuePair"
        400:
          description: "Invalid status value"
  /portfolio/{id}/investmentsummary:
    get:
      tags:
        - "portfolio"
      summary: "Retrieve a list of top-line numbers used for the portfolio details summary"
      description: ""
      operationId: "getPortfolioInvestmentSummary"
      parameters:
        - name: "id"
          in: "path"
          description: "Id for the portfolio being requested"
          required: true
          type: "number"
      produces:
        - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/InvestmentSummary"
        400:
          description: "Invalid status value"
  /portfolio/{id}/companyperformancebymetric:
    get:
      tags:
        - "portfolio"
      summary: "Retrieve an aggregation of portco revenue or ebitda dollars. Used for Portfolio Dashboard Revenue/Ebitda widgets"
      description: ""
      operationId: "getPortfolioCompaniesMetricsSummary"
      parameters:
        - name: "id"
          in: "path"
          description: "Id for the portfolio being requested"
          required: true
          type: "number"
        - name: "as_of_date"
          in: "query"
          description: "As-Of Date for which to return data, in the format YYYY-MM-dd"
          required: true
          type: "string"
        - name: "metric_type"
          in: "query"
          description: "Metric Type for which to return data"
          required: true
          type: "string"
          enum:
              - REVENUE
              - EBITDA
      produces:
        - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PortfolioCompaniesMetricsSummary"
        400:
          description: "Invalid status value"
  /portfolio/{id}/companyperformancerange:
    get:
      tags:
        - "portfolio"
      summary: "Retrieve an list of best/worst performing companies in portfolio by metric slice"
      description: ""
      operationId: "getPortfolioCompaniesMetricsRange"
      parameters:
        - name: "id"
          in: "path"
          description: "Id for the portfolio being requested"
          required: true
          type: "number"
        - name: "as_of_date"
          in: "query"
          description: "As-Of Date for which to return data, in the format YYYY-MM-dd"
          required: true
          type: "string"
        - name: "metric_type"
          in: "query"
          description: "Metric Typefor which to return data"
          required: true
          type: "string"
          enum:
              - REVENUE
              - EBITDA
      produces:
        - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PortfolioCompaniesMetricsRange"
        400:
          description: "Invalid status value"
  /portfolio/{id}/exposure:
    get:
      tags:
        - "portfolio"
      summary: "Retrieve a list of groupings for the portfolio of Total Value by some aggregation point. Used for Portfolio Dashboard Exposure by FX/Sector widgets"
      description: ""
      operationId: "getPortfolioExposureBy"
      parameters:
        - name: "id"
          in: "path"
          description: "Id for the portfolio sectors being requested"
          required: true
          type: "number"
        - name: "as_of_date"
          in: "query"
          description: "As-Of Date for which to return data, in the format YYYY-MM-dd"
          required: true
          type: "string"
        - name: "by"
          in: "query"
          description: "Aggregate of exposure point for the portfolio being requested"
          required: true
          type: "string"
          enum:
            - "SECTOR"
            - "FX"
            - "COUNTRY"
            - "REGION"
            - "TYPE"
            - "STAGE"
      produces:
        - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ExposureListResponse"
        400:
          description: "Invalid status value"
  /portfolio/{id}/relativecompanyperformance:
    get:
      tags:
        - "portfolio"
      summary: "Retrieve a list of companies with data that expresses their profit & revenue relationship within the portfolio. Used for Portfolio Dashboard bubble chart & grouping widget"
      description: ""
      operationId: "getPortfolioCompanyPerformance"
      parameters:
        - name: "id"
          in: "path"
          description: "Id for the portfolio being requested"
          required: true
          type: "number"
        - name: "as_of_date"
          in: "query"
          description: "As-Of Date for which to return data, in the format YYYY-MM-dd"
          required: true
          type: "string"
        - name: "top"
          in: "query"
          description: "Number of companies to return"
          required: false
          type: "number"
          default: 10
        - name: "accumulator"
          in: "query"
          description: "Related metric to key off of for aggregate ratios"
          required: false
          type: "string"
          default: "UNREALIZED_VALUE"
          enum:
              - "UNREALIZED_VALUE"
              - "INCREASE_IN_TOTAL_VALUE"
              - "REVENUE"
        - name: "by"
          in: "query"
          description: "Aggregate grouping point for the portfolio being requested"
          required: true
          type: "string"
          enum:
            - "SECTOR"
            - "FX"
            - "COUNTRY"
            - "REGION"
            - "TYPE"
            - "STAGE"
            - "DEALLEAD"
        - name: "scenario"
          in: "query"
          description: "Type of scenario we are contrasting actuals against"
          required: false
          type: "string"
          default: "BUDGET"
          enum:
            - "BUDGET"
            - "FORECAST"
            - "PRIORYEAR"
            - "PRIORQUARTER"
            - "INVESTMENTCASE"
      produces:
        - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/BubbleChartResponse"
        400:
          description: "Invalid status value"
definitions:
  ApiResponse:
    type: "object"
    properties:
      success:
        type: "boolean"
        description: "Simple boolean indicated whether there might be response errors"
      message:
        type: "string"
        description: "Simple string message that can provide additional detail on the API response; perhaps with details on the data returned."
      data:
        type: "object"
        description: "Container for APi request data. Can be an object container or array container. Should be used by the client to create domain models or similar."
      errors:
        type: "array"
        description: "List of errors associated with the API request."
        items:
          $ref: '#/definitions/ApiError'
  ApiError:
    type: "object"
    properties:
      code:
        description: "Specific API error currencyCode that clients can use to map to unique error messages or create specific error flows."
        type: "integer"
      field:
        type: "string"
        description: "Used when form POSTs with specific field errors and indicates the field name in the request."
      message:
        type: "string"
        description: "Custom message provided by the API for the error."
      id:
        type: "string"
        description: "UUIDv4 used to track errors in logs especially when using PII data that's omitted from logs."
  AvailablePeriod:
    type: "object"
    properties:
      quarter:
        type: "integer"
        format: "int64"
      year:
        type: "integer"
        format: "int64"
  BoardMember:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      sinceDate:
        type: "string"
      company:
        type: "string"
      phone:
        type: "string"
      email:
        type: "string"
      avatar:
        type: "string"
  BubbleChartResponse:
    type: "object"
    properties:
      series:
        type: array
        items:
            type: object
            properties:
                x:
                  type: number
                y:
                    type: number
                density:
                    type: number
                group:
                    type: string
  CashData:
    type: "object"
    properties:
      cashRunwayInMonths:
        type: number
      cashData:
        $ref: '#/definitions/DataSeriesResponse'
  DocumentsListResponse:
    type: array
    items:
      $ref: '#/definitions/Document'
  Document:
    type: object
    properties:
      type:
        type: "string"
        enum:
              - "BOARD"
              - "FINANCIALS"
              - "INVESTMENTCOMMITTEE"
              - "VALUATION"
      format:
        type: "string"
        enum:
              - "SLIDES"
              - "SPREADSHEET"
              - "DOCUMENT"
              - "PDF"
      name:
        type: "string"
      srcUrl:
        type: "string"
      createdBy:
        type: "string"
      createdByContactId:
        type: "number"
      createdOn:
        type: "string"
  ExposureListResponse:
    type: "array"
    items:
      $ref: '#/definitions/Exposure'
  Exposure:
    type: "object"
    properties:
      label:
        type: "string" # In the backend we need to create label for FX as concat of symbol/string
      portfolioValue:
        type: "number"
      portfolioPercentage:
        type: "number"
  Company:
    type: "object"
    properties:
      id:
        type: "integer"
      name:
        type: "string"
        description: "Displayed in the company header."
      description:
        type: "string"
        description: "Displayed in the company header under the tags."
      type:
        type: "string"
        enum:
          - "PRIVATE"
          - "PUBLIC"
          - "EXITED"
          - "JOINT_VENTURE"
        description: "Indicator of whether company is PUBLIC or PRIVATE, Exited or Joint Venture."
      sectors:
        type: "array"
        items:
          $ref: '#/definitions/Sector'
      region:
        type: "string"
      country:
        type: "string"
      defaultCurrency:
        $ref: '#/definitions/Currency'
      funds:
        type: "array"
        items:
          $ref: "#/definitions/Fund"
      logo:
        type: "string"
      percentOwnership:
        type: "number"
        description: "Displayed in the company header to the right of the tags."
      #      Note: This should be accomplished via the /team endpoint which includes deal team and other team info and is useful elsewhere
      #      dealTeam:
      #        type: "array"
      #        currencyDesc: "Displayed in the company header under the currencyDesc as a list."
      #        items:
      #          $ref: '#/definitions/TeamMember'
      teamLead:
        type: "string"
        description: "Deal team lead name. Mainly for listing contents (sort/filter)"
      teamLeadID:
        type: "number"
        description: "Deal team lead id. Mainly for listing contents (sort/filter)"
      takeaways:
        type: "array"
        items:
#          $ref: '#/definitions/Takeaway'
          type: "string"
      takeawayDate:
        type: "string"
        description: "Displayed in the company header with the list of takeaways."
      slackName:
        type: "string"
      slackUrl:
        type: "string"
      aka:
        type: "string"
      headquarters:
        type: "string"
      ceo:
        type: "string"
      website:
        type: "string"
      revenueStage:
        type: "string"
        enum:
          - "PREREV"
          - "LT_100_M"
          - "GT_100_M"
      fiscalYearEnd:
        $ref: '#/definitions/MonthDay'
      fund:
        type: "string"
      investingEntity:
        type: "string"
      initialInvestment:
        type: "string"
      fdOwnership:
        type: "string"
      lastFollowOn:
        type: "string"
      boardMembers:
        type: "array"
        items:
          $ref: "#/definitions/Contact"
      availablePeriods:
        type: "array"
        items:
          $ref: "#/definitions/AvailablePeriod"
      yearOfIncorporation:
        type: "string"
  CompanyListGroup:
    type: "object"
    description: "The Company in this listing will be a backend defined subset of #Company appropriate to the listing only"
    properties:
      groupName:
        type: "string"
      companies:
        type: "array"
        items:
          $ref: "#/definitions/Company"
  CompanyListResponse:
    type: array
    items:
      $ref: '#/definitions/CompanyListGroup'
  CompanyRelationship:
    type: "object"
    properties:
      memberId:
        type: "integer"
        description: "the id of the member"
      companyId:
        type: "integer"
        description: "the id of the company"
      relationship:
        type: "string"
        enum:
          - "OTHER_COMPANY"
          - "COMPANY_COVERED"
          - "BOARD_SEAT"
          - "LEAD"
  Contact:
    allOf:
      - $ref: "#/definitions/Person"
      - type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      companyName:          #@Andrew what is this? Intentionally denormalized, or employer, or ?
        type: "string"
      contactName:
        type: "string"
      avatar:
        type: "string"
      slack:
        type: "string"
      mobile:
        type: "string"
      email:
        type: "string"
      bio:
        type: "string"
      position:
        type: "string"
  Currency:
    type: "object"
    properties:
      symbol:
        type: "string"
      code:
        type: "string"
      name:
        type: "string"
  Address:
    type: "object"
    properties:
      id:
        type: "integer"
      addressName:          #@Andrew what is this? Intentionally denormalized, or employer, or ?
        type: "string"
      address1:
        type: "string"
      address2:
        type: "string"
      city:
        type: "string"
      state:
        type: "string"
      countryCodeISO:
        type: "string"
      countryName:
        type: "string"
      postal:
        type: "string"
  DataSeriesResponse:
    type: "object"
    properties:
      data:
        type: "array"
        items:
          type: "object"
          properties:
            series:
              type: "array"
              items:
                $ref: '#/definitions/DataSeries'
  DataSeries:
    type: "object"
    properties:
      name:
        type: "string"
      displayOrder:
        type: "integer"
        format: "int64"
      data:
        type: "array"
        items:
          $ref: '#/definitions/DataSeriesDataItem'
  DataSeriesDataItem:
    type: "object"
    properties:
      quarter:
        type: "integer"
        format: "int64"
      year:
        type: "integer"
        format: "int64"
      amountInNative:
        type: "number"
      amountInUSD:
        type: "number"
  Initiative:
    type: "object"
    properties:
      id:
        type: "string"
      companyId:
        type: "string"
      status:
        type: "string"
        enum:
        - "QUEUED_TO_START"
        - "IN_PROGRESS_ON_TRACK"
        - "IN_PROGRESS_NEEDS_ATTN"
        - "COMPLETE"
      title:
        type: "string"
      initiativeOwner:
        $ref: '#/definitions/Person'
      description:
        type: "string"
  InvestmentSummary:
    type: "object"
    properties:
      private:
        type: "number"
      public:
        type: "number"
      jv:
        type: "number"
      exited:
        type: "number"
      invested:
        type: "number"
      approved:
        type: "number"
      totalFund:
        type: "number"
      totalValue:
        type: "number"
      moic:
        type: "number"
      grossIrr:
        type: "number"
  Fund:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
        description: "name of the fund"
      totalFund:
        type: "number"
      fundInception:
        type: "string"
      invested:
        type: "number"
  Person:
    type: "object"
    properties:
      id:
        type: "string"
      firstName:
        type: "string"
      lastNameName:
        type: "string"
  PortfolioCompaniesMetricsSummary:
    type: object
    properties:
      series_quarters:
        type: array
        items:
          type: object
          properties:
            name:
              type: string
            scenarioName:
              type: string
            netChangeFromPY:
              type: string
              format: nullable
            data:
              type: array
              items:
                type: object
                properties:
                  date:
                    type: string
                    format: date
                  calendarQuarter:
                    type: number
                  amountInUSD:
                    type: number
                  projection:
                    type: boolean
      series_years:
        type: array
        items:
          type: object
          properties:
            name:
              type: string
            scenarioName:
              type: string
            netChangeFromPY:
              type: string
              format: nullable
            data:
              type: array
              items:
                type: object
                properties:
                  date:
                    type: string
                    format: date
                  calendarQuarter:
                    type: number
                  amountInUSD:
                    type: number
                  projection:
                    type: boolean
  PortfolioCompaniesMetricsRange:
    type: object
    properties:
      highestValue:
        type: array
        items:
          $ref: '#/definitions/RangeElement'
      highestGrowth:
        type: array
        items:
          $ref: '#/definitions/RangeElement'
      lowestGrowth:
        type: array
        items:
          $ref: '#/definitions/RangeElement'
  RangeElement:
    type: object
    properties:
      id:
          type: number
      label:
          type: string
      logoSrc:
          type: string
      value:
          type: number
      delta:
          type: number
  PortfolioSummary:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      valuation:
        type: "number"
      headquarters:
        type: "string"
      funds:
        type: "array"
        items:
          $ref: '#/definitions/Fund'
  Sector:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
        description: "The name of the industry"
      description:
        type: "string"
        description: "Long form currencyDesc of the industry (ie, for tooltips)"
  MonthDay:
    type: "object"
    properties:
      month:
        type: "string"
      day:
        type: "integer"
        format: "int64"
  KeyValuePair:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
  KpisResponse:
    type: array
    items:
      $ref: "#/definitions/MetricsResponse"
  MetricsResponse:
    allOf:
      - $ref: "#/definitions/metricsGraph"
      - $ref: "#/definitions/comparisonGraph"
      - $ref: "#/definitions/tableData"
  metricsGraph:
    type: object
    properties:
      series_quarters:
        type: array
        items:
          type: object
          properties:
            name:
              type: string
            displayOrder:
              type: number
            scenarioName:
              type: string
            isCalculation:
              type: boolean
            data:
              type: array
              items: # These can be optimized later....
                type: object
                properties:
                  date:
                    type: string
                    format: date
                  financialQuarter:
                    type: number
                  amountInNative:
                    type: number
                  amountInUSD:
                    type: number
                  projection:
                    type: boolean
                  comment:
                    type: string
      series_years:
        type: array
        items: # These can be optimized later....
          type: object
          properties:
            name:
              type: string
            displayOrder:
              type: number
            scenarioName:
              type: string
            isCalculation:
              type: boolean
            data:
              type: array
              items:
                type: object
                properties:
                  date:
                    type: string
                    format: date
                  financialQuarter:
                    type: number
                  amountInNative:
                    type: number
                  amountInUSD:
                    type: number
                  projection:
                    type: boolean
                  comment:
                    type: string
  comparisonGraph:
    type: object
    properties:
      series_quarters:
        type: array
        items: # These can be optimized later....
          type: object
          properties:
            date:
              type: string
              format: date
            value:
              type: number
      series_years:
        type: array
        items: # These can be optimized later....
          type: object
          properties:
            date:
              type: string
              format: date
            value:
              type: number
  tableData:
    type: object
    properties:
      series_quarters:
        type: array
        items:
          type: object
          properties:
            name:
              type: string
            scenarioName:
              type: string
            displayOrder:
              type: number
            data:
              type: array
              items: # These can be optimized later....
                type: object
                properties:
                  date:
                    type: string
                    format: date
                  financialQuarter:
                    type: number
                  valueInNative:
                    type: number
                  valueInUSD:
                    type: number
                  comment:
                    type: string
                  sourceType:
                    type: string
      series_years:
        type: array
        items:
          type: object
          properties:
            name:
              type: string
            scenarioName:
              type: string
            displayOrder:
              type: number
            data:
              type: array
              items: # These can be optimized later....
                type: object
                properties:
                  date:
                    type: string
                    format: date
                  financialQuarter:
                    type: number
                  valueInNative:
                    type: number
                  valueInUSD:
                    type: number
                  comment:
                    type: string
                  sourceType:
                    type: string
  Takeaway:
    type: "object"
    properties:
      id:
        type: "string"
      content:
        type: "string"
  Team:
    type: "object"
    properties:
      teams:
        type: "array"
        items:
          $ref: "#/definitions/TeamMemberGroup"
  TeamMember:
    allOf:
      - $ref: "#/definitions/Contact"
      - type: "object"
        properties:
          companyRelationships:
            type: "array"
            items:
              $ref: "#/definitions/CompanyRelationship"
  TeamMemberGroup:
    type: "object"
    properties:
      category:
        type: "string"
        enum:
          - "DEAL"
          - "OPS"
          - "PORTFOLIO"
          - "FINANCE"
          - "LEGAL"
      members:
        type: "array"
        items:
          $ref: "#/definitions/TeamMember"
  Valuation:
    type: "object"
    properties:
      valuationDetail:
        type: "array"
        items:
          $ref: "#/definitions/ValuationDetail"
      topLineValuations:
        type: "array"
        items:
          $ref: "#/definitions/TopLineValuations"
  ValuationDetail:
    type: "object"
    properties:
      approved:
        type: "number"
      invested:
        type: "number"
      realizedValue:
        type: "number"
      unrealizedValue:
        type: "number"
      totalValue:
        type: "number"
      moic:
        type: "number"
      irr:
        type: "number"
      companyEquityValue:
        type: "number"
      ownership:
        type: "number"
  TopLineValuations:
    type: "object"
    properties:
      totalValue:
        type: "number"
      moic:
        type: "number"
      irr:
        type: "number"
